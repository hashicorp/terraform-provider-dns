name: Tests
on:
  pull_request:
    branches: [ main ]
    paths-ignore:
      - 'README.md'
      - 'CHANGELOG.md'
      - 'website/*'
  push:
    branches: [ main ]
    paths-ignore:
      - 'README.md'
      - 'CHANGELOG.md'
      - 'website/*'
jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    timeout-minutes: 5
    steps:

    - name: Set up Go
      uses: actions/setup-go@v2
      with:
        go-version: '1.16'
      id: go

    - name: Check out code into the Go module directory
      uses: actions/checkout@v2
    - name: Go fmt
      run: |
        make fmt

    - name: Go vet
      run: |
        make vet

    - name: Build
      run: |
        go build -v .


# Ubuntu: run acceptance tests in a matrix with Terraform core versions
  test-ubuntu:
    name: Ubuntu Matrix Test
    needs: build
    runs-on: ubuntu-latest
    timeout-minutes: 30
    strategy:
      fail-fast: false
      matrix:
        terraform:
          - '0.12.31'
          # - '0.13.7'
          # - '0.14.11'
          # - '0.15.5'
          # - '1.0.2'

    steps:
    - name: Add hosts entry
      run: echo "127.0.0.1 ns.example.com" | sudo tee -a /etc/hosts

    - name: Add hosts entry
      run: echo "127.0.0.1 ns.example.com" | sudo tee -a /etc/hosts

    - name: Install krb5-user
      run: sudo apt-get install krb5-user

    - name: Set up Go
      uses: actions/setup-go@v2
      with:
        go-version: '1.16'
      id: go

    - name: Check out code into the Go module directory
      uses: actions/checkout@v2

    - name: TF acceptance tests
      timeout-minutes: 30
      env:
        TF_ACC: "1"
        TF_ACC_TERRAFORM_VERSION: ${{ matrix.terraform }}
      run: |
        bash internal/provider/acceptance.sh

# Windows: run acceptance tests in a matrix with Terraform core versions
  test-windows:
    name: Windows Matrix Test
    needs: build
    runs-on: windows-latest
    timeout-minutes: 15
    strategy:
      fail-fast: false
      matrix:
        terraform:
          - '0.12.30'
          # - '0.13.6'
          # - '0.14.5'

    steps:
    # - name: Update Docker
    #   run: |
    #     Get-Package -Name Docker -ProviderName DockerMsftProvider
    #     Find-Package -Name Docker -ProviderName DockerMsftProvider
    #     Install-Package -Name Docker -ProviderName DockerMsftProvider -Update -Force
    #     New-Item -Path C:\ProgramData\docker\config -Name "daemon.json" -ItemType "file" -Value '{"experimental": "enabled"}'
    #     Start-Service Docker

    - name: Add hosts entry
      run: Add-Content -Path $env:windir\System32\drivers\etc\hosts -Value "`n127.0.0.1`tns.example.com" -Force

    - name: Set up Go
      uses: actions/setup-go@v2.1.3
      with:
        go-version: '1.16'
      id: go

    - name: Check out code into the Go module directory
      uses: actions/checkout@v2.3.3

    - name: TF acceptance tests
      timeout-minutes: 10
      env:
        TF_ACC: "1"
        TF_ACC_TERRAFORM_VERSION: ${{ matrix.terraform }}
      run: |
        bash internal/provider/acceptance.sh

# MacOS: run acceptance tests in a matrix with Terraform core versions
  test-macos:
    name: MacOS Matrix Test
    needs: build
    runs-on: macos-latest
    timeout-minutes: 15
    strategy:
      fail-fast: false
      matrix:
        terraform:
          - '0.12.30'
          # - '0.13.6'
          # - '0.14.5'

    steps:
    - name: Install Docker
      run: |
        # brew install --cask docker
        # docker version
        brew install docker
        docker version

    - name: Set up Go
      uses: actions/setup-go@v2.1.3
      with:
        go-version: '1.16'
      id: go

    - name: Check out code into the Go module directory
      uses: actions/checkout@v2.3.3

    - name: TF acceptance tests
      timeout-minutes: 10
      env:
        TF_ACC: "1"
        TF_ACC_TERRAFORM_VERSION: ${{ matrix.terraform }}
      run: |
        bash internal/provider/acceptance.sh
